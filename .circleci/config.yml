# # Use the latest 2.1 version of CircleCI pipeline process engine.
# # See: https://circleci.com/docs/configuration-reference
# version: 2.1

# # Define a job to be invoked later in a workflow.
# # See: https://circleci.com/docs/configuration-reference/#jobs
# jobs:
#   say-hello:

#     # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
#     # See: https://circleci.com/docs/configuration-reference/#executor-job
#     docker:
#       - image: cimg/base:stable
#     # Add steps to the job
#     # See: https://circleci.com/docs/configuration-reference/#steps
#     steps:
#       - checkout
#       # - run:
#       #     name: "install packages"
#       #     command: npm install
#       - run:
#           name: "Say hello"
#           command: "echo Hello, World!"    
#       # - run:
#       #     name: "execute test"
#       #     command: npm run cy:execute

#       # - run:
#       #     name: "execute test"
#       #     command: npx cy:run

#   test-code:
#     # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
#     # See: https://circleci.com/docs/configuration-reference/#executor-job
#     docker:
#       - image: cimg/base:stable
#     # Add steps to the job
#     # See: https://circleci.com/docs/configuration-reference/#steps
#     steps:
#       - checkout
#       - run:
#           name: "install packages"
#           command: npm install
#       # - run:
#       #     name: "Say hello"
#       #     command: "echo Hello, World!"    
#       - run:
#           name: "execute test"
#           command: npm run cy:execute

#       # - run:
#       #     name: "execute test"
#       #     command: npx cy:run
# # Orchestrate jobs using workflows
# # See: https://circleci.com/docs/configuration-reference/#workflows
# workflows:
#   say-hello-workflow:
#     jobs:
#       - say-hello
#       - test-code


# version: 2.1

# orbs:
#   node: circleci/node@5.1.0

# jobs:
#   build:
#     docker:
#       - image: cimg/base:stable
#     steps:
#       - checkout
#       - node/install:
#           install-yarn: true
#           node-version: '14'
#       - run: npm install
#       - run: npm build
#       - run: npm test
#       - run:
#           name: "execute test"
#           command: npm run cy:execute


# workflows:
#   version: 2
#   build_and_test:
#     jobs:
#       - build

# // completed

# Sucessfull

# version: 2.1
# orbs:
#   node: circleci/node@5.1.0

# jobs:
#   build-and-test:
#     docker:
#       - image: cypress/base:18.16.0
#     working_directory: ~/repo
#     resource_class: large
#     steps:
#       - checkout
#       - run:
#           name: Install dependencies
#           command: npm install
#       - run:
#           name: Run Cypress tests
#           command: npx cypress run

# workflows:
#   version: 2
#   build_and_test:
#     jobs:
#       - build-and-test






# version: 2.1

# orbs:
#   node: circleci/node@5.1.0

# jobs:
#   build-and-test:
#     docker:
#       - image: cypress/base:18.16.0
#     steps:
#       - checkout
#       - node/install-packages
#       - run:
#           name: Run tests
#           command: npx cypress run

# workflows:
#   version: 2
#   build_and_test:
#     jobs:
#       - build-and-test

# version: 2.1
# orbs:
#   cypress: cypress-io/cypress@3
# workflows:
#   test:
#     jobs:
#       - cypress/run:
#           cypress-command: npm run  cy:execute






version: '2.1'
orbs:
  cypress: cypress-io/cypress@3
jobs:
  install-and-persist:
    executor: cypress/default
    steps:
      - cypress/install
      - persist_to_workspace:
          paths:
            - .cache/Cypress
            - project
          root: ~/
  run-tests-in-parallel:
    executor: cypress/default
    parallelism: 8
    steps:
      - attach_workspace:
          at: ~/
      - cypress/run-tests:
          cypress-command: npx cypress run  --parallel --record
workflows:
  use-my-orb:
    jobs:
      - install-and-persist:
          name: Install & Persist To Workspace
      - run-tests-in-parallel:
          name: Run Tests in Parallel
          requires:
            - Install & Persist To Workspace
